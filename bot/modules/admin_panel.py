from modules import buttons as bt
import math
from modules import dbdata as db

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /settings
async def manage_users(users: list, page: int) -> tuple:
    users_count = len(users)
    max_users_length = 5
    pages = math.ceil(users_count / max_users_length)
    start_point = page * max_users_length - max_users_length
    end_point = page * max_users_length
    print(f'—Å—Ç–∞—Ä—Ç - {start_point}, –æ–∫–æ–Ω—á–∞–Ω–∏–µ - {end_point}')
    MNG_BUTTONS = await bt.manage_users_buttons(users_count, page, pages)
    start_text = f'–ü–µ—Ä–µ—á–µ–Ω—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Å—Ç—Ä–∞–Ω–∏—Ü–∞ {page} –∏–∑ {pages}):'
    for i in users[start_point:end_point]:
        start_text = start_text + f'\nüîπ Telegram ID: {i["id"]} \n–ò–º—è: {str(i["first_name"])} \n–ë–∞–ª–∞–Ω—Å StableDiff: {str(round(float(i["credits"] or 0), 4))} \n–ü–æ—Ç—Ä–∞—á–µ–Ω–æ GPT3: $ {str(round(float(i["price_3"] or 0), 4))} \n–ü–æ—Ç—Ä–∞—á–µ–Ω–æ GPT4: $ {str(round(float(i["price_4"] or 0), 4))} \n–ü–æ—Ç—Ä–∞—á–µ–Ω–æ –í—Å–µ–≥–æ: $ {str(round(float(i["total_price"] or 0), 4))} \n–î–æ—Å—Ç—É–ø–Ω—ã–π –±–∞–ª–∞–Ω—Å: $ {str(round(float(i["gpt_chat_credits"] or 0), 4))}'
    per_page_users = []
    for i in users[start_point:end_point]:
        per_page_users.append(i['id'])
    return start_text, MNG_BUTTONS, per_page_users

async def get_current_user_details(telegram_id: int) -> str:
    user = db.get_current_user(telegram_id)
    start_text = f'–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:'
    for i in user:
        start_text = start_text + f'\nüîπ Telegram ID: {i["id"]} \n–ò–º—è: {str(i["first_name"])} \n–ë–∞–ª–∞–Ω—Å StableDiff: {str(round(float(i["credits"] or 0), 4))} \n–ü–æ—Ç—Ä–∞—á–µ–Ω–æ GPT3: $ {str(round(float(i["price_3"] or 0), 4))} \n–ü–æ—Ç—Ä–∞—á–µ–Ω–æ GPT4: $ {str(round(float(i["price_4"] or 0), 4))} \n–ü–æ—Ç—Ä–∞—á–µ–Ω–æ –í—Å–µ–≥–æ: $ {str(round(float(i["total_price"] or 0), 4))} \n–î–æ—Å—Ç—É–ø–Ω—ã–π –±–∞–ª–∞–Ω—Å: $ {str(round(float(i["gpt_chat_credits"] or 0), 4))}'
    return start_text